package com.example.stopwatch

import android.os.Bundle
import android.os.Handler
import android.os.Looper
import androidx.appcompat.app.AppCompatActivity
import android.widget.Button
import android.widget.TextView

class MainActivity : AppCompatActivity() {

    private lateinit var tvTimer: TextView
    private lateinit var btnStart: Button
    private lateinit var btnStop: Button
    private lateinit var btnReset: Button
    private val handler = Handler(Looper.getMainLooper())
    private var startTime = 0L
    private var elapsedTime = 0L
    private var isRunning = false

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        tvTimer = findViewById(R.id.tvTimer)
        btnStart = findViewById(R.id.btnStart)
        btnStop = findViewById(R.id.btnStop)
        btnReset = findViewById(R.id.btnReset)

        btnStart.setOnClickListener {
            if (!isRunning) {
                startTime = System.currentTimeMillis() - elapsedTime
                handler.postDelayed(updateTimer, 0)
                isRunning = true
            }
        }

        btnStop.setOnClickListener {
            if (isRunning) {
                handler.removeCallbacks(updateTimer)
                elapsedTime = System.currentTimeMillis() - startTime
                isRunning = false
            }
        }

        btnReset.setOnClickListener {
            handler.removeCallbacks(updateTimer)
            isRunning = false
            startTime = 0L
            elapsedTime = 0L
            tvTimer.text = "00:00:00"
        }
    }

    private val updateTimer: Runnable = object : Runnable {
        override fun run() {
            elapsedTime = System.currentTimeMillis() - startTime
            val seconds = (elapsedTime / 1000).toInt()
            val minutes = seconds / 60
            val hours = minutes / 60
            val displaySeconds = seconds % 60
            val displayMinutes = minutes % 60

            tvTimer.text = String.format("%02d:%02d:%02d", hours, displayMinutes, displaySeconds)
            handler.postDelayed(this, 1000)
        }
    }
}
